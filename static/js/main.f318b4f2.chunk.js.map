{"version":3,"sources":["../../core/src/utils/router/index.web.ts","../../core/src/screens/Login/Login.style.tsx","../../core/src/components/Link/index.web.tsx","../../core/src/redux/store.tsx","../../core/src/screens/Login/Login.screen.tsx","../../core/src/api/auth.ts","../../core/src/screens/Landscape/Landscape.style.tsx","../../core/src/components/Header/AppHeader.web.tsx","../../core/src/screens/Landscape/Landscape.screen.web.tsx","../../core/src/screens/About/About.screen.web.tsx","../../core/src/router/index.web.tsx","../../core/src/App.tsx","index.tsx","../../core/src/assets/img/login_logo.png"],"names":["routesMap","login","root","name","path","landscape","about","StyleSheet","create","container","flex","justifyContent","backgroundColor","buttonContainer","width","alignItems","paddingVertical","borderRadius","borderColor","borderWidth","loginContainer","logo","height","buttonText","fontSize","textAlign","fontWeight","color","formContainer","padding","input","marginBottom","loginButton","Link","props","push","useHistory","goBack","Button","variant","disabled","onClick","onPress","routeName","handleClick","text","defaultState","password","loginSuccess","createStore","state","action","type","payload","Login","context","onSuccess","username","onFailure","loginUser","store","dispatch","alert","setState","getState","subscribe","isCredential","this","trim","KeyboardAvoidingView","behavior","style","View","Image","resizeMode","source","require","TextInput","autoCapitalize","autoCorrect","keyboardType","returnKeyType","placeholder","placeholderTextColor","onChangeText","onChangeTextLogin","value","secureTextEntry","onChangeTextPassword","onLoginPress","React","Component","marginTop","AppHeader","aState","flexDirection","styles","Text","paddingRight","Landscape","isWEB","Platform","OS","aFlexDirection","data_1","undefined","pieData","filter","map","index","svg","fill","Math","random","toString","slice","console","log","key","data","contentInset","top","bottom","curve","shape","left","About","Router","exact","to","App","StatusBar","hidden","SafeAreaView","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f318b4f2.chunk.js","sourcesContent":["const routesMap = {\n  login: {\n    root: { name: \"Login\", path: \"/login\" },\n  },\n  landscape: {\n    root: { name: \"Landscape\", path: \"/landscape\" },\n  },\n  about: {\n    root: { name: \"About\", path: \"/about\" },\n  }\n};\n\nexport { routesMap };\n","import {StyleSheet} from 'react-native';\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#2c3e5A',\n  },\n  buttonContainer: {\n    width: 274,\n    alignItems: 'center',\n    backgroundColor: '#6e7f80',\n    paddingVertical: 15,\n    borderRadius: 8,\n    borderColor: '#536878',\n    borderWidth: 4,\n  },\n  loginContainer: {\n    alignItems: 'center',\n    paddingVertical: 15,\n  },\n  logo: {\n    width: 300,\n    height: 100,\n  },\n  buttonText:{\n    height: 18,\n    width: 274,\n      fontSize:16,\n      textAlign: 'center',\n      fontWeight :'bold',\n      color: '#36454f',\n  },\n  formContainer: {\n    padding: 20,\n  },\n  input: {\n    height: 40,\n    width: 274,\n    backgroundColor: '#536878',\n    marginBottom: 10,\n    padding: 10,\n    color: '#fff',\n    borderRadius: 4,\n  },\n  loginButton: {\n    backgroundColor: '#2980b6',\n    color: '#fff',\n  },\n});\n","import React from 'react'\n\nimport {LinkProps} from './models'\nimport {Button} from '@material-ui/core'\nimport {useHistory} from 'react-router-dom'\n\nexport const Link = (props: LinkProps) => {\n  const {push} = useHistory();\n  const {goBack} = useHistory();\n\n  const handleClick = (props: LinkProps) => {\n    if (props.onPress) {\n      props.onPress( () => {\n        if (props.routeName) {\n          push(props.routeName)}\n        }\n      )\n    } else if (props.routeName) {\n      push(props.routeName)\n    } else {\n      goBack();\n    }\n  };\n\n  return (\n    <Button variant='contained'\n            color='primary'\n            disabled={props.disabled || false}\n            onClick={() => handleClick(props)}>\n      {props.text}\n    </Button>\n  )\n};\n","import {createStore} from 'redux';\n\nconst defaultState = {\n  login: 'sepivtorak',\n  password: 'Portal1!',\n  loginSuccess: false,\n};\n\nfunction appStore(state=defaultState, action: { type: any; payload: { login: any; }; }) {\n  switch(action.type) {\n    case 'LOGIN':\n      return {...state,\n              login: action.payload.login,\n              loginSuccess: true,\n            };\n    case \"LOGOUT\":\n      return {...state, loginSuccess: false,};\n    default:\n      return state;\n  }\n}\n\nexport default createStore(appStore);\n","import React, {Component} from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Alert,\n  StatusBar,\n  Dimensions,\n  Image,\n  KeyboardAvoidingView,\n} from 'react-native';\n\nimport style from './Login.style';\nimport {Link} from '../../components/Link'\nimport {routesMap} from '../../utils/router'\n\nimport store from '../../redux/store'\nimport {loginUser} from '../../api/auth'\n\n\nexport class Login extends React.Component<any, any> {\n\n  constructor(props: any, context: any) {\n    super(props, context);\n    this.state = store.getState();\n\n    store.subscribe(()=>{\n      this.setState(store.getState());\n    });\n  }\n\n  onLoginPress = (onSuccess: any) => {\n    const {login, password} = this.state;\n\n    loginUser(\n      login,\n      password,\n      () => {\n        store.dispatch({\n          type: \"LOGIN\",\n          payload: {login: login}\n        });\n        onSuccess();\n      },\n      () => {\n        alert('Login failed. Please try again.');\n      }\n    );\n  };\n\n  // onPressLogin = ({onSuccess}) async() => {\n  //   if (isValidCredential(this.state.login, this.state.password)) {\n  //     console.log('TRUwfefwwfeE')\n  //\n  //\n  //     return true\n  //\n  //   } else {\n  //     console.log('wkbfejkbfwejkeb')\n  //     alert('Login failed. Please try again.');\n  //     return false\n  //   }\n\n    // if (this.state.loginSuccess) { // should check if email changed\n    //   alert('You have already logged in.');\n    //   console.log('loginpress -- already login go to chat - succeess state:' + this.state.loginSuccess);\n    //   this.props.navigation.navigate('Chat', {\n    //     login: this.state.login,\n    //     password: this.state.password,\n    //   });\n    //   return;\n    // }\n  // }\n\n  onChangeTextLogin = (login: any) => {\n    this.setState({ login });\n  };\n\n  onChangeTextPassword = (password: any) => {\n    this.setState({ password });\n  };\n\n  loginSuccess = () => {\n\n  };\n\n  loginFailed = () => {\n\n  };\n\nrender() {\n    const isCredential = this.state.login.trim() !== '' && this.state.password.trim() !== ''\n\n    return (\n      <KeyboardAvoidingView behavior=\"padding\" style={style.container}>\n        <View style={style.loginContainer}>\n          <Image\n            resizeMode=\"contain\"\n            style={style.logo}\n            source={require('../../assets/img/login_logo.png')}\n          />\n        </View>\n\n        <View style={style.loginContainer}>\n          <TextInput\n            style={style.input}\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            keyboardType=\"email-address\"\n            returnKeyType=\"next\"\n            placeholder='Login'\n            placeholderTextColor=\"#003333\"\n            onChangeText={this.onChangeTextLogin}\n            value={this.state.login}\n          />\n          <TextInput\n            style={style.input}\n            returnKeyType=\"go\"\n            placeholder=\"Password\"\n            placeholderTextColor=\"#004444\"\n            secureTextEntry\n            onChangeText={this.onChangeTextPassword}\n            value={this.state.password}\n          />\n          <Link text='LOGIN'\n                disabled={!isCredential}\n                onPress={this.onLoginPress}\n                routeName={routesMap.landscape.root.path} />\n        </View>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n","export function loginUser(username: string, password: string, onSuccess: any, onFailure: any) {\n  const isValidUser = username === 'sepivtorak' || username === 'idanilov'\n  const isValidCredentials = isValidUser && password === 'Portal1!';\n\n  if (isValidCredentials) {\n    onSuccess();\n  } else {\n    onFailure();\n  }\n};\n","import {StyleSheet} from 'react-native';\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#2c3e5A',\n  },\n  text: {\n    color: '#EB3E5A',\n    marginTop: 100,\n    textAlign: 'center',\n    fontSize: 40,\n    fontWeight: '700',\n  },\n  buttonContainer: {\n    width: 274,\n    alignItems: 'center',\n    backgroundColor: '#6e7f80',\n    paddingVertical: 15,\n    borderRadius: 8,\n    borderColor: '#536878',\n    borderWidth: 4,\n  },\n  buttonText:{\n    height: 18,\n    width: 174,\n    fontSize:16,\n    textAlign: 'center',\n    fontWeight :'bold',\n    color: '#36454f',\n  },\n});\n","import React from 'react'\nimport { StyleSheet, Text, View, Image } from 'react-native'\n\nimport {Link} from '../../components/Link'\nimport {routesMap} from '../../utils/router'\nimport store from '../../redux/store'\n\nexport default  function AppHeader() {\n  const aState = store.getState();\n\n  return (\n    <View style={{height: 60,\n                  width: '100%',\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  backgroundColor: '#003333',\n                  justifyContent: 'space-between'}}>\n      <View>\n        <Image resizeMode='contain'\n               style={styles.logo}\n               source={require('../../assets/img/login_logo.png')}\n        />\n      </View>\n      <Text style={styles.text}>Welcome to React Native Web</Text>\n      <Text style={styles.text}>{aState.login}</Text>\n      <View style={{paddingRight:30, flexDirection: 'row', justifyContent: 'space-between'}}>\n          <Link text='LOGOUT'\n                routeName={routesMap.login.root.path} />\n          <Link text='ABOUT'\n                routeName={routesMap.about.root.path} />\n      </View>\n    </View>\n)}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 60,\n  },\n  logo: {\n    width: 180,\n    height: 50,\n  },\n  text: {\n    color: '#708090',\n    fontSize: 36,\n    fontWeight: '600',\n  }\n})\n","import React from 'react';\nimport {View, Text, Platform} from 'react-native';\nimport style from './Landscape.style';\n\nimport {Link} from '../../components/Link'\nimport {routesMap} from '../../utils/router'\n\nimport { AreaChart, BarChart, PieChart, Grid } from 'react-native-svg-charts'\nimport * as shape from 'd3-shape'\n\nimport AppHeader from '../../components/Header/AppHeader'\n\nimport GoogleLogin from 'react-google-login';\n\nconst responseGoogle = (response: any) => {\n  console.log(response);\n\n}\n\nconst responseGoogle2 = (response: any) => {\n  console.log(response);\n}\n\nexport function Landscape() {\n  const isWEB = Platform.OS === 'web'\n  const aFlexDirection = isWEB ? 'row' : 'column'\n\n  const color_0 = '#1d4f5f'\n  const data_0 = [50, 10, 40, 95, -4, -24, 85, 91, 35, 53, -53, 24, 50, -20, -80]\n\n  const color_1 = '#411461'\n  const data_1 = [50, 10, 40, 95, -4, -24, null, 85, undefined, 0, 35, 53, -53, 24, 50, -20, -80]\n\n  const data_2 = [ 50, 10, 40, 95, -4, -24, 85, 91, 35, 53, -53, 24, 50, -20, -80 ]\n  const randomColor = () => ('#' + (Math.random() * 0xFFFFFF << 0).toString(16) + '000000').slice(0, 7)\n\n  const pieData = data_2\n            .filter(value => value > 0)\n            .map((value, index) => ({\n                value,\n                svg: {\n                    fill: randomColor(),\n                    onPress: () => console.log('press', index),\n                },\n                key: `pie-${index}`,\n            }))\n\n  return (\n<>\n<AppHeader/>\n    <View style={style.container}>\n      <View style={{flexDirection: aFlexDirection}}>\n      <AreaChart\n                style={{ width: 300, height: 200 }}\n                data={data_0}\n                contentInset={{ top: 30, bottom: 30 }}\n                curve={shape.curveNatural}\n                svg={{ fill: color_0 }}\n      >\n        <Grid />\n      </AreaChart>\n\n      <BarChart style={{ width: 300, height: 200 , left: isWEB ? 100 : 0}}\n                data={data_1}\n                svg={{ fill: color_1 }}\n                contentInset={{ top: 30, bottom: 30 }}\n      >\n        <Grid />\n      </BarChart>\n\n\n      </View>\n      <PieChart\n                      style={ { width:200, height: 200 } }\n                      data={ pieData }\n                  />\n    </View>\n    </>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native';\n\nimport {Link} from '../../components/Link'\nimport {routesMap} from '../../utils/router'\n\nimport AppHeader from '../../components/Header/AppHeader'\n\nexport function About() {\n  return (\n    <>\n      <AppHeader/>\n      <View style={{alignItems: 'center', justifyContent: 'center'}}>\n      <Text>About</Text>\n      </View>\n    </>\n  );\n}\n","import React from 'react'\n\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\n\nimport { routesMap } from '../utils/router'\nimport { Login as LoginScreen } from '../screens/Login/Login.screen'\nimport { Landscape as LandscapeScreen } from '../screens/Landscape/Landscape.screen'\nimport { About as AboutScreen } from '../screens/About/About.screen'\n\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {/* About routes */}\n        <Route exact path={routesMap.login.root.path}>\n          <LoginScreen />\n        </Route>\n        {/* Feature routes */}\n        <Route exact path={routesMap.landscape.root.path}>\n          <LandscapeScreen />\n        </Route>\n        <Route exact path={routesMap.about.root.path}>\n          <AboutScreen />\n        </Route>\n        {/* Default route */}\n        <Route path=\"*\">\n          <Redirect to={routesMap.login.root.path} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport { Router };\n","import React from 'react'\nimport {Router} from './router';\nimport {StatusBar, SafeAreaView} from 'react-native';\n\nexport function App() {\n  return (\n    <>\n    <StatusBar hidden={true}/>\n    <SafeAreaView style={{flex: 1, backgroundColor: '#2c3e5A'}}>\n      <Router />\n    </SafeAreaView>\n    </>\n  );\n};\n","import { AppRegistry } from 'react-native'\n\nimport {App} from 'core/src/App'\n\nAppRegistry.registerComponent('RN_Universal', () => App)\nAppRegistry.runApplication('RN_Universal', {\n  rootTag: document.getElementById('root'),\n})\n","module.exports = __webpack_public_path__ + \"static/media/login_logo.abe0e6fe.png\";"],"sourceRoot":""}